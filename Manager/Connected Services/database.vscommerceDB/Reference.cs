//------------------------------------------------------------------------------
// <auto-generated>
//     Il codice è stato generato da uno strumento.
//     Versione runtime:4.0.30319.42000
//
//     Le modifiche apportate a questo file possono provocare un comportamento non corretto e andranno perse se
//     il codice viene rigenerato.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Manager.database.vscommerceDB {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DBFault", Namespace="http://schemas.datacontract.org/2004/07/dbManager.vscommerceDB")]
    [System.SerializableAttribute()]
    public partial class DBFault : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="http://schemas.datacontract.org/2004/07/dbManager.vscommerceDB")]
    [System.SerializableAttribute()]
    public partial class User : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime birthdayField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string emailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string fiscalCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool isAdminField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string passwordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string surnameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime birthday {
            get {
                return this.birthdayField;
            }
            set {
                if ((this.birthdayField.Equals(value) != true)) {
                    this.birthdayField = value;
                    this.RaisePropertyChanged("birthday");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string email {
            get {
                return this.emailField;
            }
            set {
                if ((object.ReferenceEquals(this.emailField, value) != true)) {
                    this.emailField = value;
                    this.RaisePropertyChanged("email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string fiscalCode {
            get {
                return this.fiscalCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.fiscalCodeField, value) != true)) {
                    this.fiscalCodeField = value;
                    this.RaisePropertyChanged("fiscalCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool isAdmin {
            get {
                return this.isAdminField;
            }
            set {
                if ((this.isAdminField.Equals(value) != true)) {
                    this.isAdminField = value;
                    this.RaisePropertyChanged("isAdmin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                if ((object.ReferenceEquals(this.nameField, value) != true)) {
                    this.nameField = value;
                    this.RaisePropertyChanged("name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string password {
            get {
                return this.passwordField;
            }
            set {
                if ((object.ReferenceEquals(this.passwordField, value) != true)) {
                    this.passwordField = value;
                    this.RaisePropertyChanged("password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string surname {
            get {
                return this.surnameField;
            }
            set {
                if ((object.ReferenceEquals(this.surnameField, value) != true)) {
                    this.surnameField = value;
                    this.RaisePropertyChanged("surname");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Brand", Namespace="http://schemas.datacontract.org/2004/07/dbManager.vscommerceDB")]
    [System.SerializableAttribute()]
    public partial class Brand : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                if ((object.ReferenceEquals(this.nameField, value) != true)) {
                    this.nameField = value;
                    this.RaisePropertyChanged("name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Category", Namespace="http://schemas.datacontract.org/2004/07/dbManager.vscommerceDB")]
    [System.SerializableAttribute()]
    public partial class Category : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                if ((object.ReferenceEquals(this.nameField, value) != true)) {
                    this.nameField = value;
                    this.RaisePropertyChanged("name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Product", Namespace="http://schemas.datacontract.org/2004/07/dbManager.vscommerceDB")]
    [System.SerializableAttribute()]
    public partial class Product : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string barcodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Manager.database.vscommerceDB.Brand brandField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Manager.database.vscommerceDB.Category categoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string descriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string imageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double priceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int qtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int taxField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string barcode {
            get {
                return this.barcodeField;
            }
            set {
                if ((object.ReferenceEquals(this.barcodeField, value) != true)) {
                    this.barcodeField = value;
                    this.RaisePropertyChanged("barcode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Manager.database.vscommerceDB.Brand brand {
            get {
                return this.brandField;
            }
            set {
                if ((object.ReferenceEquals(this.brandField, value) != true)) {
                    this.brandField = value;
                    this.RaisePropertyChanged("brand");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Manager.database.vscommerceDB.Category category {
            get {
                return this.categoryField;
            }
            set {
                if ((object.ReferenceEquals(this.categoryField, value) != true)) {
                    this.categoryField = value;
                    this.RaisePropertyChanged("category");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.descriptionField, value) != true)) {
                    this.descriptionField = value;
                    this.RaisePropertyChanged("description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string image {
            get {
                return this.imageField;
            }
            set {
                if ((object.ReferenceEquals(this.imageField, value) != true)) {
                    this.imageField = value;
                    this.RaisePropertyChanged("image");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                if ((object.ReferenceEquals(this.nameField, value) != true)) {
                    this.nameField = value;
                    this.RaisePropertyChanged("name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double price {
            get {
                return this.priceField;
            }
            set {
                if ((this.priceField.Equals(value) != true)) {
                    this.priceField = value;
                    this.RaisePropertyChanged("price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int qty {
            get {
                return this.qtyField;
            }
            set {
                if ((this.qtyField.Equals(value) != true)) {
                    this.qtyField = value;
                    this.RaisePropertyChanged("qty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int tax {
            get {
                return this.taxField;
            }
            set {
                if ((this.taxField.Equals(value) != true)) {
                    this.taxField = value;
                    this.RaisePropertyChanged("tax");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Order", Namespace="http://schemas.datacontract.org/2004/07/dbManager.vscommerceDB")]
    [System.SerializableAttribute()]
    public partial class Order : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Manager.database.vscommerceDB.User customerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime dateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Manager.database.vscommerceDB.OrderLine[] orderLinesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double totalField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Manager.database.vscommerceDB.User customer {
            get {
                return this.customerField;
            }
            set {
                if ((object.ReferenceEquals(this.customerField, value) != true)) {
                    this.customerField = value;
                    this.RaisePropertyChanged("customer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime date {
            get {
                return this.dateField;
            }
            set {
                if ((this.dateField.Equals(value) != true)) {
                    this.dateField = value;
                    this.RaisePropertyChanged("date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Manager.database.vscommerceDB.OrderLine[] orderLines {
            get {
                return this.orderLinesField;
            }
            set {
                if ((object.ReferenceEquals(this.orderLinesField, value) != true)) {
                    this.orderLinesField = value;
                    this.RaisePropertyChanged("orderLines");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double total {
            get {
                return this.totalField;
            }
            set {
                if ((this.totalField.Equals(value) != true)) {
                    this.totalField = value;
                    this.RaisePropertyChanged("total");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OrderLine", Namespace="http://schemas.datacontract.org/2004/07/dbManager.vscommerceDB")]
    [System.SerializableAttribute()]
    public partial class OrderLine : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int orderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double priceUnitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Manager.database.vscommerceDB.Product productField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int qtyField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int order {
            get {
                return this.orderField;
            }
            set {
                if ((this.orderField.Equals(value) != true)) {
                    this.orderField = value;
                    this.RaisePropertyChanged("order");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double priceUnit {
            get {
                return this.priceUnitField;
            }
            set {
                if ((this.priceUnitField.Equals(value) != true)) {
                    this.priceUnitField = value;
                    this.RaisePropertyChanged("priceUnit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Manager.database.vscommerceDB.Product product {
            get {
                return this.productField;
            }
            set {
                if ((object.ReferenceEquals(this.productField, value) != true)) {
                    this.productField = value;
                    this.RaisePropertyChanged("product");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int qty {
            get {
                return this.qtyField;
            }
            set {
                if ((this.qtyField.Equals(value) != true)) {
                    this.qtyField = value;
                    this.RaisePropertyChanged("qty");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="database.vscommerceDB.IDBManager")]
    public interface IDBManager {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBManager/DoWork", ReplyAction="http://tempuri.org/IDBManager/DoWorkResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Manager.database.vscommerceDB.DBFault), Action="http://tempuri.org/IDBManager/DoWorkDBFaultFault", Name="DBFault", Namespace="http://schemas.datacontract.org/2004/07/dbManager.vscommerceDB")]
        void DoWork();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBManager/DoWork", ReplyAction="http://tempuri.org/IDBManager/DoWorkResponse")]
        System.Threading.Tasks.Task DoWorkAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBManager/getUserByEmail", ReplyAction="http://tempuri.org/IDBManager/getUserByEmailResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Manager.database.vscommerceDB.DBFault), Action="http://tempuri.org/IDBManager/getUserByEmailDBFaultFault", Name="DBFault", Namespace="http://schemas.datacontract.org/2004/07/dbManager.vscommerceDB")]
        Manager.database.vscommerceDB.User getUserByEmail(string Email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBManager/getUserByEmail", ReplyAction="http://tempuri.org/IDBManager/getUserByEmailResponse")]
        System.Threading.Tasks.Task<Manager.database.vscommerceDB.User> getUserByEmailAsync(string Email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBManager/existUser", ReplyAction="http://tempuri.org/IDBManager/existUserResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Manager.database.vscommerceDB.DBFault), Action="http://tempuri.org/IDBManager/existUserDBFaultFault", Name="DBFault", Namespace="http://schemas.datacontract.org/2004/07/dbManager.vscommerceDB")]
        bool existUser(string Email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBManager/existUser", ReplyAction="http://tempuri.org/IDBManager/existUserResponse")]
        System.Threading.Tasks.Task<bool> existUserAsync(string Email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBManager/getUserById", ReplyAction="http://tempuri.org/IDBManager/getUserByIdResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Manager.database.vscommerceDB.DBFault), Action="http://tempuri.org/IDBManager/getUserByIdDBFaultFault", Name="DBFault", Namespace="http://schemas.datacontract.org/2004/07/dbManager.vscommerceDB")]
        Manager.database.vscommerceDB.User getUserById(int ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBManager/getUserById", ReplyAction="http://tempuri.org/IDBManager/getUserByIdResponse")]
        System.Threading.Tasks.Task<Manager.database.vscommerceDB.User> getUserByIdAsync(int ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBManager/getUsers", ReplyAction="http://tempuri.org/IDBManager/getUsersResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Manager.database.vscommerceDB.DBFault), Action="http://tempuri.org/IDBManager/getUsersDBFaultFault", Name="DBFault", Namespace="http://schemas.datacontract.org/2004/07/dbManager.vscommerceDB")]
        Manager.database.vscommerceDB.User[] getUsers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBManager/getUsers", ReplyAction="http://tempuri.org/IDBManager/getUsersResponse")]
        System.Threading.Tasks.Task<Manager.database.vscommerceDB.User[]> getUsersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBManager/getBrandById", ReplyAction="http://tempuri.org/IDBManager/getBrandByIdResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Manager.database.vscommerceDB.DBFault), Action="http://tempuri.org/IDBManager/getBrandByIdDBFaultFault", Name="DBFault", Namespace="http://schemas.datacontract.org/2004/07/dbManager.vscommerceDB")]
        Manager.database.vscommerceDB.Brand getBrandById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBManager/getBrandById", ReplyAction="http://tempuri.org/IDBManager/getBrandByIdResponse")]
        System.Threading.Tasks.Task<Manager.database.vscommerceDB.Brand> getBrandByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBManager/getBrands", ReplyAction="http://tempuri.org/IDBManager/getBrandsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Manager.database.vscommerceDB.DBFault), Action="http://tempuri.org/IDBManager/getBrandsDBFaultFault", Name="DBFault", Namespace="http://schemas.datacontract.org/2004/07/dbManager.vscommerceDB")]
        Manager.database.vscommerceDB.Brand[] getBrands();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBManager/getBrands", ReplyAction="http://tempuri.org/IDBManager/getBrandsResponse")]
        System.Threading.Tasks.Task<Manager.database.vscommerceDB.Brand[]> getBrandsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBManager/getCategoryById", ReplyAction="http://tempuri.org/IDBManager/getCategoryByIdResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Manager.database.vscommerceDB.DBFault), Action="http://tempuri.org/IDBManager/getCategoryByIdDBFaultFault", Name="DBFault", Namespace="http://schemas.datacontract.org/2004/07/dbManager.vscommerceDB")]
        Manager.database.vscommerceDB.Category getCategoryById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBManager/getCategoryById", ReplyAction="http://tempuri.org/IDBManager/getCategoryByIdResponse")]
        System.Threading.Tasks.Task<Manager.database.vscommerceDB.Category> getCategoryByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBManager/getCategories", ReplyAction="http://tempuri.org/IDBManager/getCategoriesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Manager.database.vscommerceDB.DBFault), Action="http://tempuri.org/IDBManager/getCategoriesDBFaultFault", Name="DBFault", Namespace="http://schemas.datacontract.org/2004/07/dbManager.vscommerceDB")]
        Manager.database.vscommerceDB.Category[] getCategories();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBManager/getCategories", ReplyAction="http://tempuri.org/IDBManager/getCategoriesResponse")]
        System.Threading.Tasks.Task<Manager.database.vscommerceDB.Category[]> getCategoriesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBManager/getProductById", ReplyAction="http://tempuri.org/IDBManager/getProductByIdResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Manager.database.vscommerceDB.DBFault), Action="http://tempuri.org/IDBManager/getProductByIdDBFaultFault", Name="DBFault", Namespace="http://schemas.datacontract.org/2004/07/dbManager.vscommerceDB")]
        Manager.database.vscommerceDB.Product getProductById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBManager/getProductById", ReplyAction="http://tempuri.org/IDBManager/getProductByIdResponse")]
        System.Threading.Tasks.Task<Manager.database.vscommerceDB.Product> getProductByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBManager/getProducts", ReplyAction="http://tempuri.org/IDBManager/getProductsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Manager.database.vscommerceDB.DBFault), Action="http://tempuri.org/IDBManager/getProductsDBFaultFault", Name="DBFault", Namespace="http://schemas.datacontract.org/2004/07/dbManager.vscommerceDB")]
        Manager.database.vscommerceDB.Product[] getProducts();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBManager/getProducts", ReplyAction="http://tempuri.org/IDBManager/getProductsResponse")]
        System.Threading.Tasks.Task<Manager.database.vscommerceDB.Product[]> getProductsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBManager/getOrdersByPartner", ReplyAction="http://tempuri.org/IDBManager/getOrdersByPartnerResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Manager.database.vscommerceDB.DBFault), Action="http://tempuri.org/IDBManager/getOrdersByPartnerDBFaultFault", Name="DBFault", Namespace="http://schemas.datacontract.org/2004/07/dbManager.vscommerceDB")]
        Manager.database.vscommerceDB.Order[] getOrdersByPartner(int ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBManager/getOrdersByPartner", ReplyAction="http://tempuri.org/IDBManager/getOrdersByPartnerResponse")]
        System.Threading.Tasks.Task<Manager.database.vscommerceDB.Order[]> getOrdersByPartnerAsync(int ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBManager/getOrders", ReplyAction="http://tempuri.org/IDBManager/getOrdersResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Manager.database.vscommerceDB.DBFault), Action="http://tempuri.org/IDBManager/getOrdersDBFaultFault", Name="DBFault", Namespace="http://schemas.datacontract.org/2004/07/dbManager.vscommerceDB")]
        Manager.database.vscommerceDB.Order[] getOrders();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBManager/getOrders", ReplyAction="http://tempuri.org/IDBManager/getOrdersResponse")]
        System.Threading.Tasks.Task<Manager.database.vscommerceDB.Order[]> getOrdersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBManager/getOrderById", ReplyAction="http://tempuri.org/IDBManager/getOrderByIdResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Manager.database.vscommerceDB.DBFault), Action="http://tempuri.org/IDBManager/getOrderByIdDBFaultFault", Name="DBFault", Namespace="http://schemas.datacontract.org/2004/07/dbManager.vscommerceDB")]
        Manager.database.vscommerceDB.Order getOrderById(int ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBManager/getOrderById", ReplyAction="http://tempuri.org/IDBManager/getOrderByIdResponse")]
        System.Threading.Tasks.Task<Manager.database.vscommerceDB.Order> getOrderByIdAsync(int ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBManager/updateUser", ReplyAction="http://tempuri.org/IDBManager/updateUserResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Manager.database.vscommerceDB.DBFault), Action="http://tempuri.org/IDBManager/updateUserDBFaultFault", Name="DBFault", Namespace="http://schemas.datacontract.org/2004/07/dbManager.vscommerceDB")]
        bool updateUser(Manager.database.vscommerceDB.User userUpdated);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBManager/updateUser", ReplyAction="http://tempuri.org/IDBManager/updateUserResponse")]
        System.Threading.Tasks.Task<bool> updateUserAsync(Manager.database.vscommerceDB.User userUpdated);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBManager/updateBrand", ReplyAction="http://tempuri.org/IDBManager/updateBrandResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Manager.database.vscommerceDB.DBFault), Action="http://tempuri.org/IDBManager/updateBrandDBFaultFault", Name="DBFault", Namespace="http://schemas.datacontract.org/2004/07/dbManager.vscommerceDB")]
        bool updateBrand(Manager.database.vscommerceDB.Brand brandUpdated);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBManager/updateBrand", ReplyAction="http://tempuri.org/IDBManager/updateBrandResponse")]
        System.Threading.Tasks.Task<bool> updateBrandAsync(Manager.database.vscommerceDB.Brand brandUpdated);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBManager/updateCategory", ReplyAction="http://tempuri.org/IDBManager/updateCategoryResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Manager.database.vscommerceDB.DBFault), Action="http://tempuri.org/IDBManager/updateCategoryDBFaultFault", Name="DBFault", Namespace="http://schemas.datacontract.org/2004/07/dbManager.vscommerceDB")]
        bool updateCategory(Manager.database.vscommerceDB.Category categoryUpdated);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBManager/updateCategory", ReplyAction="http://tempuri.org/IDBManager/updateCategoryResponse")]
        System.Threading.Tasks.Task<bool> updateCategoryAsync(Manager.database.vscommerceDB.Category categoryUpdated);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBManager/updateProduct", ReplyAction="http://tempuri.org/IDBManager/updateProductResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Manager.database.vscommerceDB.DBFault), Action="http://tempuri.org/IDBManager/updateProductDBFaultFault", Name="DBFault", Namespace="http://schemas.datacontract.org/2004/07/dbManager.vscommerceDB")]
        bool updateProduct(Manager.database.vscommerceDB.Product productUpdated);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBManager/updateProduct", ReplyAction="http://tempuri.org/IDBManager/updateProductResponse")]
        System.Threading.Tasks.Task<bool> updateProductAsync(Manager.database.vscommerceDB.Product productUpdated);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBManager/createOrder", ReplyAction="http://tempuri.org/IDBManager/createOrderResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Manager.database.vscommerceDB.DBFault), Action="http://tempuri.org/IDBManager/createOrderDBFaultFault", Name="DBFault", Namespace="http://schemas.datacontract.org/2004/07/dbManager.vscommerceDB")]
        bool createOrder(Manager.database.vscommerceDB.Order newOrder, Manager.database.vscommerceDB.OrderLine[] orderLines);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBManager/createOrder", ReplyAction="http://tempuri.org/IDBManager/createOrderResponse")]
        System.Threading.Tasks.Task<bool> createOrderAsync(Manager.database.vscommerceDB.Order newOrder, Manager.database.vscommerceDB.OrderLine[] orderLines);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBManager/createBrand", ReplyAction="http://tempuri.org/IDBManager/createBrandResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Manager.database.vscommerceDB.DBFault), Action="http://tempuri.org/IDBManager/createBrandDBFaultFault", Name="DBFault", Namespace="http://schemas.datacontract.org/2004/07/dbManager.vscommerceDB")]
        bool createBrand(Manager.database.vscommerceDB.Brand brandToCreate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBManager/createBrand", ReplyAction="http://tempuri.org/IDBManager/createBrandResponse")]
        System.Threading.Tasks.Task<bool> createBrandAsync(Manager.database.vscommerceDB.Brand brandToCreate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBManager/createCategory", ReplyAction="http://tempuri.org/IDBManager/createCategoryResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Manager.database.vscommerceDB.DBFault), Action="http://tempuri.org/IDBManager/createCategoryDBFaultFault", Name="DBFault", Namespace="http://schemas.datacontract.org/2004/07/dbManager.vscommerceDB")]
        bool createCategory(Manager.database.vscommerceDB.Category categoryToCreate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBManager/createCategory", ReplyAction="http://tempuri.org/IDBManager/createCategoryResponse")]
        System.Threading.Tasks.Task<bool> createCategoryAsync(Manager.database.vscommerceDB.Category categoryToCreate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBManager/createProduct", ReplyAction="http://tempuri.org/IDBManager/createProductResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Manager.database.vscommerceDB.DBFault), Action="http://tempuri.org/IDBManager/createProductDBFaultFault", Name="DBFault", Namespace="http://schemas.datacontract.org/2004/07/dbManager.vscommerceDB")]
        bool createProduct(Manager.database.vscommerceDB.Product productToCreate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBManager/createProduct", ReplyAction="http://tempuri.org/IDBManager/createProductResponse")]
        System.Threading.Tasks.Task<bool> createProductAsync(Manager.database.vscommerceDB.Product productToCreate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBManager/createUser", ReplyAction="http://tempuri.org/IDBManager/createUserResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Manager.database.vscommerceDB.DBFault), Action="http://tempuri.org/IDBManager/createUserDBFaultFault", Name="DBFault", Namespace="http://schemas.datacontract.org/2004/07/dbManager.vscommerceDB")]
        bool createUser(Manager.database.vscommerceDB.User userToCreate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBManager/createUser", ReplyAction="http://tempuri.org/IDBManager/createUserResponse")]
        System.Threading.Tasks.Task<bool> createUserAsync(Manager.database.vscommerceDB.User userToCreate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBManager/deleteOrder", ReplyAction="http://tempuri.org/IDBManager/deleteOrderResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Manager.database.vscommerceDB.DBFault), Action="http://tempuri.org/IDBManager/deleteOrderDBFaultFault", Name="DBFault", Namespace="http://schemas.datacontract.org/2004/07/dbManager.vscommerceDB")]
        bool deleteOrder(int ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBManager/deleteOrder", ReplyAction="http://tempuri.org/IDBManager/deleteOrderResponse")]
        System.Threading.Tasks.Task<bool> deleteOrderAsync(int ID);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IDBManagerChannel : Manager.database.vscommerceDB.IDBManager, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DBManagerClient : System.ServiceModel.ClientBase<Manager.database.vscommerceDB.IDBManager>, Manager.database.vscommerceDB.IDBManager {
        
        public DBManagerClient() {
        }
        
        public DBManagerClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DBManagerClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DBManagerClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DBManagerClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void DoWork() {
            base.Channel.DoWork();
        }
        
        public System.Threading.Tasks.Task DoWorkAsync() {
            return base.Channel.DoWorkAsync();
        }
        
        public Manager.database.vscommerceDB.User getUserByEmail(string Email) {
            return base.Channel.getUserByEmail(Email);
        }
        
        public System.Threading.Tasks.Task<Manager.database.vscommerceDB.User> getUserByEmailAsync(string Email) {
            return base.Channel.getUserByEmailAsync(Email);
        }
        
        public bool existUser(string Email) {
            return base.Channel.existUser(Email);
        }
        
        public System.Threading.Tasks.Task<bool> existUserAsync(string Email) {
            return base.Channel.existUserAsync(Email);
        }
        
        public Manager.database.vscommerceDB.User getUserById(int ID) {
            return base.Channel.getUserById(ID);
        }
        
        public System.Threading.Tasks.Task<Manager.database.vscommerceDB.User> getUserByIdAsync(int ID) {
            return base.Channel.getUserByIdAsync(ID);
        }
        
        public Manager.database.vscommerceDB.User[] getUsers() {
            return base.Channel.getUsers();
        }
        
        public System.Threading.Tasks.Task<Manager.database.vscommerceDB.User[]> getUsersAsync() {
            return base.Channel.getUsersAsync();
        }
        
        public Manager.database.vscommerceDB.Brand getBrandById(int id) {
            return base.Channel.getBrandById(id);
        }
        
        public System.Threading.Tasks.Task<Manager.database.vscommerceDB.Brand> getBrandByIdAsync(int id) {
            return base.Channel.getBrandByIdAsync(id);
        }
        
        public Manager.database.vscommerceDB.Brand[] getBrands() {
            return base.Channel.getBrands();
        }
        
        public System.Threading.Tasks.Task<Manager.database.vscommerceDB.Brand[]> getBrandsAsync() {
            return base.Channel.getBrandsAsync();
        }
        
        public Manager.database.vscommerceDB.Category getCategoryById(int id) {
            return base.Channel.getCategoryById(id);
        }
        
        public System.Threading.Tasks.Task<Manager.database.vscommerceDB.Category> getCategoryByIdAsync(int id) {
            return base.Channel.getCategoryByIdAsync(id);
        }
        
        public Manager.database.vscommerceDB.Category[] getCategories() {
            return base.Channel.getCategories();
        }
        
        public System.Threading.Tasks.Task<Manager.database.vscommerceDB.Category[]> getCategoriesAsync() {
            return base.Channel.getCategoriesAsync();
        }
        
        public Manager.database.vscommerceDB.Product getProductById(int id) {
            return base.Channel.getProductById(id);
        }
        
        public System.Threading.Tasks.Task<Manager.database.vscommerceDB.Product> getProductByIdAsync(int id) {
            return base.Channel.getProductByIdAsync(id);
        }
        
        public Manager.database.vscommerceDB.Product[] getProducts() {
            return base.Channel.getProducts();
        }
        
        public System.Threading.Tasks.Task<Manager.database.vscommerceDB.Product[]> getProductsAsync() {
            return base.Channel.getProductsAsync();
        }
        
        public Manager.database.vscommerceDB.Order[] getOrdersByPartner(int ID) {
            return base.Channel.getOrdersByPartner(ID);
        }
        
        public System.Threading.Tasks.Task<Manager.database.vscommerceDB.Order[]> getOrdersByPartnerAsync(int ID) {
            return base.Channel.getOrdersByPartnerAsync(ID);
        }
        
        public Manager.database.vscommerceDB.Order[] getOrders() {
            return base.Channel.getOrders();
        }
        
        public System.Threading.Tasks.Task<Manager.database.vscommerceDB.Order[]> getOrdersAsync() {
            return base.Channel.getOrdersAsync();
        }
        
        public Manager.database.vscommerceDB.Order getOrderById(int ID) {
            return base.Channel.getOrderById(ID);
        }
        
        public System.Threading.Tasks.Task<Manager.database.vscommerceDB.Order> getOrderByIdAsync(int ID) {
            return base.Channel.getOrderByIdAsync(ID);
        }
        
        public bool updateUser(Manager.database.vscommerceDB.User userUpdated) {
            return base.Channel.updateUser(userUpdated);
        }
        
        public System.Threading.Tasks.Task<bool> updateUserAsync(Manager.database.vscommerceDB.User userUpdated) {
            return base.Channel.updateUserAsync(userUpdated);
        }
        
        public bool updateBrand(Manager.database.vscommerceDB.Brand brandUpdated) {
            return base.Channel.updateBrand(brandUpdated);
        }
        
        public System.Threading.Tasks.Task<bool> updateBrandAsync(Manager.database.vscommerceDB.Brand brandUpdated) {
            return base.Channel.updateBrandAsync(brandUpdated);
        }
        
        public bool updateCategory(Manager.database.vscommerceDB.Category categoryUpdated) {
            return base.Channel.updateCategory(categoryUpdated);
        }
        
        public System.Threading.Tasks.Task<bool> updateCategoryAsync(Manager.database.vscommerceDB.Category categoryUpdated) {
            return base.Channel.updateCategoryAsync(categoryUpdated);
        }
        
        public bool updateProduct(Manager.database.vscommerceDB.Product productUpdated) {
            return base.Channel.updateProduct(productUpdated);
        }
        
        public System.Threading.Tasks.Task<bool> updateProductAsync(Manager.database.vscommerceDB.Product productUpdated) {
            return base.Channel.updateProductAsync(productUpdated);
        }
        
        public bool createOrder(Manager.database.vscommerceDB.Order newOrder, Manager.database.vscommerceDB.OrderLine[] orderLines) {
            return base.Channel.createOrder(newOrder, orderLines);
        }
        
        public System.Threading.Tasks.Task<bool> createOrderAsync(Manager.database.vscommerceDB.Order newOrder, Manager.database.vscommerceDB.OrderLine[] orderLines) {
            return base.Channel.createOrderAsync(newOrder, orderLines);
        }
        
        public bool createBrand(Manager.database.vscommerceDB.Brand brandToCreate) {
            return base.Channel.createBrand(brandToCreate);
        }
        
        public System.Threading.Tasks.Task<bool> createBrandAsync(Manager.database.vscommerceDB.Brand brandToCreate) {
            return base.Channel.createBrandAsync(brandToCreate);
        }
        
        public bool createCategory(Manager.database.vscommerceDB.Category categoryToCreate) {
            return base.Channel.createCategory(categoryToCreate);
        }
        
        public System.Threading.Tasks.Task<bool> createCategoryAsync(Manager.database.vscommerceDB.Category categoryToCreate) {
            return base.Channel.createCategoryAsync(categoryToCreate);
        }
        
        public bool createProduct(Manager.database.vscommerceDB.Product productToCreate) {
            return base.Channel.createProduct(productToCreate);
        }
        
        public System.Threading.Tasks.Task<bool> createProductAsync(Manager.database.vscommerceDB.Product productToCreate) {
            return base.Channel.createProductAsync(productToCreate);
        }
        
        public bool createUser(Manager.database.vscommerceDB.User userToCreate) {
            return base.Channel.createUser(userToCreate);
        }
        
        public System.Threading.Tasks.Task<bool> createUserAsync(Manager.database.vscommerceDB.User userToCreate) {
            return base.Channel.createUserAsync(userToCreate);
        }
        
        public bool deleteOrder(int ID) {
            return base.Channel.deleteOrder(ID);
        }
        
        public System.Threading.Tasks.Task<bool> deleteOrderAsync(int ID) {
            return base.Channel.deleteOrderAsync(ID);
        }
    }
}
